---
# tasks file for promote

- name: promote | (testing) output variables
  debug:
    msg: "content_view: {{ item[0] }} | lifecycle_env: {{ item[1] }}"
  with_nested:
    - "{{ content_view }}"
    - "{{ lifecycle_env }}"

- name: promote | capture all content view names
  shell: hammer --csv content-view list --organization-id 1 --per-page 10000
         --nondefault yes | awk -F, '!/^Content/ {print $2}'
  register: content_views

- name: promote | ensure {{ content_view }} is valid
  assert:
    that:
      - "'{{ content_view }}' in content_views.stdout"
    msg: "\""{{ content_view }}\" is not a valid content view"

- name: promote | capture all lifecycle environment names
  shell: hammer --csv lifecycle-environment list --organization-id 1
         --library false | awk -F, '!/^ID/ {print $2}'
  register: lifecycle_envs

- name: promote | ensure {{ lifecycle_env }} is valid
  assert:
    that:
      - "'{{ lifecycle_env }}' in lifecycle_envs.stdout"
    msg: "\""{{ lifecycle_env }}\" is not a valid lifecycle environment"

# verify passed content view is valid
# verify passed lifecycle environment is valid
# allow for specific version to be passed, but default is latest version

################################################################################
# VARIABLES:
#  The task should allow for a particular content view to be passed, determine
#   if it is standalone or composite, and handle accordingly
#  The task should allow for a boolean to be passed and if true, only publish
#   either all or a single content view if it has not been published in a week

################################################################################
