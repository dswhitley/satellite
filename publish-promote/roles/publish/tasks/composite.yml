---
# composite tasks file for publish

################################################################################
# VARIABLES:
#  This will be passed a composite content view ID to publish
- name: composite | set fact from passed variables
  set_fact: 'cv={{ cvNAME }}'

- name: composite | capture components making up {{ cv }}
  shell: hammer content-view info {{ORGID}} --name "{{ cv }}" |
         sed -n '/^Components/,/^Activation/p' |
         awk '/Name/ {print $2;}'
  register: components

# should I use this instead of parsing the output of info?
#  hammer --csv content-view version list ${ORGID} --content-view "${CVNAME}"

- name: composite | [{{ cv }}] find current version ID of each component
  shell: hammer content-view info {{ORGID}} --name {{ item }} |
         sed -n '/^Versions/,/^Components/p' |
         awk '/ID/ {a=$NF} END{print a}'
  register: componentID
  with_items: "{{ components.stdout_lines }}"

- name: composite | [{{ cv }}] concatenate the component version IDs
  set_fact: componentIDs="{{ componentIDs | default("") }},{{ item }}"
  with_items: "{{ componentID.results|map(attribute='stdout_lines')|list }}"

- name: composite | [{{ cv }}] clean up the component version IDs variable
  set_fact: componentIDs="{{ componentIDs | regex_replace('^,', '') }}"

## update the component versions of the passed content view
- name: composite | update the underlying components of {{ cv }}
  command: hammer content-view update --component-ids {{ componentIDs }}
           {{ORGID}} --name "{{ cv }}"

- name: composite | publishing the {{ cv }} content view
  command: hammer content-view publish {{ORGID}} --name "{{cv}}"
           --description "Update {{ ansible_date_time.iso8601 }}"

## For some reason ^this^ gives a timeout error even if it is running, so don't
## stop on error. And sometimes it gives an error about the task already running

#- name: composite | get the Satellite Task Id for the newest publish task
#  shell: hammer --csv task list --search publish --order 'ENDED AT' |
#         awk -F, '!/^ID/ && $6~/planning|running/ {print $1; exit;}'
#  register: satTASK
#  until: satTASK.stdout != ""
#  retries: 5
#  delay: 30

#- name: composite | wait for the {{ cv }} publish task to complete successfully
#  shell: hammer --csv task list --search {{ satTASK.stdout }} |
#         awk -F, '!/^ID/ && $7 !~ /success/ {print;}'
#  register: result
#  until: result.stdout == ""
#  retries: 5
#  delay: 300
