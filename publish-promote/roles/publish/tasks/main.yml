---
# main tasks file for publish

################################################################################
# VARIABLES:
#  The task should allow for a particular content view to be passed, determine
#   if it is standalone or composite, and handle accordingly
#  The task should allow for a boolean to be passed and if true, only publish
#   either all or a single content view if it has not been published in a week

################################################################################
# STANDALONE:
#  Capture the standalone content view names into a 'standalones' register
- name: capture standalone content view names in 'standalones' register
  shell: hammer --csv content-view list --organization-id 1 --per-page 10000
         --nondefault yes --noncomposite yes | awk -F, '!/^Content/ {print $2}'
  register: standalones

#  Because you cannot loop with blocks, loop through the standalones by looping
#   through an external standalone task (handling one standalone at a time)
- name: loop through the standalones by including the standalone task file
  include: standalone.yml cvNAME={{ item }}
  with_items: '{{ standalones.stdout_lines }}'

################################################################################
# COMPOSITE:
#  Capture the composite content view IDs into a 'composites' register
- name: capture comosite content view names in 'composites' register
  shell: hammer --csv content-view list --organization-id 1 --per-page 10000
         --nondefault yes --composite yes | awk -F, '!/^Content/ {print $2}'
  register: composites

#  Because you cannot loop with blocks, loop through the composites by looping
#   through an external composite task (handling one composite at a time)
- name: loop through the composites by including the composite task file
  include: composite.yml cvNAME={{ item_cvNAME }}
  with_items: '{{ composites.stdout_lines }}'
  loop_control:
    loop_var: item_cvNAME
